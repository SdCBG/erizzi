(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.0'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     58238,       1593]*)
(*NotebookOutlinePosition[     58971,       1618]*)
(*  CellTagsIndexPosition[     58927,       1614]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{\("\<-----------------------------------------------------------\
---------\>";\), "\[IndentingNewLine]", \("\<PORTALE SEMPLICE INCASTRATO AL \
PIEDE
 File Mathematica con procedimento di condensazione statica

 Corso di Fondamenti di Dinamica e Instabilita' delle Strutture
 Universita' di Bergamo, Facolta' di Ingegneria, Dalmine
 prof. Egidio Rizzi
 Marzo 2007\>";\), "\[IndentingNewLine]", 
    RowBox[{\("\<-------------------------------------------------------------\
-------\>";\), "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{\("\<Istruzioni d'uso:
 Ogni cella di comandi puo' essere eseguita in Mathematica
 cliccando col mouse nello spazio all'interno dei delimitatori
 visibili a destra e agendo sulla tastiera con sfhit+enter\>";\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \("\<Disabilita la \
segnalazione di spelling errors\>";\), "\[IndentingNewLine]", 
    StyleBox[\(Off[General::spell]\),
      "MR"], "\[IndentingNewLine]", 
    RowBox[{
      StyleBox[\(Off[General::spell1]\),
        "MR"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{\("\<Soluzione col Metodo degli Spostamenti\>";\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{\("\<Gradi di liberta' q={q1,q2,q3}: 
  q1=u    spostamento orizzontale del traverso
  q2=phi1 rotazione del nodo trave/pilastro di sinistra
  q3=phi2 rotazione del nodo trave/pilastro di destra\>";\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \("\<Forze nodali \
equivalenti ai carichi\>";\), "\[IndentingNewLine]", 
    RowBox[{\(F = {F1, F2\ lc, F3\ lc};\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \("\<Matrice di \
rigidezza completa\>";\), "\[IndentingNewLine]", \(K11 = 
        24\ EJc/lc^3;\), "\[IndentingNewLine]", \(K21 = 
        6\ EJc/lc^2;\), "\[IndentingNewLine]", \(K31 = 
        K21;\), "\[IndentingNewLine]", \(K12 = 
        K21;\), "\[IndentingNewLine]", \(K22 = 
        4\ EJc/lc + 4  EJt/lt;\), "\[IndentingNewLine]", \(K32 = 
        2\ EJt/lt;\), "\[IndentingNewLine]", \(K13 = 
        K31;\), "\[IndentingNewLine]", \(K23 = 
        K32;\), "\[IndentingNewLine]", \(K33 = K22;\), "\[IndentingNewLine]", 
  
    RowBox[{\(K = {{K11, K12, K13}, \ \ \ \ \[IndentingNewLine]\ \ \ {K21, 
              K22, K23}, \[IndentingNewLine]\ \ \ {K31, K32, K33}};\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \("\<Mostra K\>";\), "\
\[IndentingNewLine]", 
    RowBox[{\(MatrixForm[K]\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", \("\<Soluzione del \
sistema lineare completo di equilibrio K.q=F\>";\), "\[IndentingNewLine]", \
\(qst = Simplify[LinearSolve[K, F]]\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(\(24\ EJc\)\/lc\^3\), \(\(6\ EJc\)\/lc\^2\), \(\(6\ \
EJc\)\/lc\^2\)},
            {\(\(6\ EJc\)\/lc\^2\), \(\(4\ EJc\)\/lc + \(4\ EJt\)\/lt\), \
\(\(2\ EJt\)\/lt\)},
            {\(\(6\ EJc\)\/lc\^2\), \(\(2\ EJt\)\/lt\), \(\(4\ EJc\)\/lc + \
\(4\ EJt\)\/lt\)}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"],

Cell[BoxData[
    \({\(lc\^3\ \((3\ EJt\ F1\ lc + EJc\ \((2\ F1 - 3\ \((F2 + F3)\))\)\ \
lt)\)\)\/\(12\ EJc\ \((6\ EJt\ lc + EJc\ lt)\)\), \(lc\^2\ lt\ \((\(-EJt\)\ \
\((F1 - 8\ F2 + 4\ F3)\)\ lc + EJc\ \((\(-2\)\ F1 + 5\ F2 + 3\ F3)\)\ lt)\)\)\
\/\(24\ EJt\^2\ lc\^2 + 52\ EJc\ EJt\ lc\ lt + 8\ EJc\^2\ lt\^2\), \
\(-\(\(lc\^2\ lt\ \((EJt\ \((F1 + 4\ F2 - 8\ F3)\)\ lc + 
                  EJc\ \((2\ F1 - 3\ F2 - 
                        5\ F3)\)\ lt)\)\)\/\(24\ EJt\^2\ lc\^2 + 
              52\ EJc\ EJt\ lc\ lt + 8\ EJc\^2\ lt\^2\)\)\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\("\<\>";\)\), "\[IndentingNewLine]", 
    \(\("\<Condensazione statica dei gdl statici (rotazioni)\>";\)\), "\n", 
    \(\(Kdd = {K[\([1, 1]\)]};\)\), "\n", 
    \(\(Kds = {K[\([1, 2]\)], \ K[\([1, 3]\)]};\)\), "\n", 
    \(\(Ksd = {K[\([2, 1]\)], \[IndentingNewLine]\ \ \ \ \ \ \ K[\([3, 
              1]\)]};\)\), "\n", 
    \(\(Kss = {{K[\([2, 2]\)], 
            K[\([2, 3]\)]}, \[IndentingNewLine]\ \ \ \ \ \ \ {K[\([3, 2]\)], 
            K[\([3, 3]\)]}};\)\), "\[IndentingNewLine]", 
    \(\(\(KssI = Simplify[Inverse[Kss]];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(Fd = {F[\([1]\)]};\)\), "\[IndentingNewLine]", 
    \(\(\(Fs = {F[\([2]\)], F[\([3]\)]};\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\("\<Rigidezza e forza condensate relative al gdl traslazionale \
q1=u\>";\)\), "\[IndentingNewLine]", 
    \(\(Kcond = 
        Simplify[Kdd - Kds . \ KssI . Ksd];\)\), "\[IndentingNewLine]", 
    \(\(\(Fcond = Simplify[Fd - Kds . KssI . Fs];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\("\<NB. In questo caso si tratta di scalari\>";\)\), "\
\[IndentingNewLine]", 
    \(Kcond11 = Kcond[\([1]\)]\), "\[IndentingNewLine]", 
    \(Fcond11 = Fcond[\([1]\)]\)}], "Input"],

Cell[BoxData[
    \(\(12\ EJc\ \((6\ EJt\ lc + EJc\ lt)\)\)\/\(lc\^3\ \((3\ EJt\ lc + 2\ \
EJc\ lt)\)\)\)], "Output"],

Cell[BoxData[
    \(\(3\ EJt\ F1\ lc + EJc\ \((2\ F1 - 3\ \((F2 + F3)\))\)\ lt\)\/\(3\ EJt\ \
lc + 2\ EJc\ lt\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\("\<\>";\)\), "\[IndentingNewLine]", 
    \(\("\<Soluzione e sostituzione a ritroso nei gdl statici\>";\)\), "\
\[IndentingNewLine]", 
    \(qdst = 
      Simplify[Kcond11^\((\(-1\))\)\ Fcond11]\), "\[IndentingNewLine]", 
    \(\(\(qsst = 
      Simplify[KssI . Fs - KssI . Ksd\ qdst]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\("\<Verifica soluzione da condensazione statica con soluzione completa \
precedente\>";\)\), "\[IndentingNewLine]", 
    \(\(\(checkq = 
      Simplify[{qdst, qsst[\([1]\)], qsst[\([2]\)]} - 
          qst]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\("\<Azione interne all'incastro al piede destro
  Npd (positiva verso l'alto),
  Tpd (positiva verso sinistra),
  Mpd (positiva antioraria)\>";\)\), "\[IndentingNewLine]", 
    \(\(Npd = \ 
        Simplify[\(-6\) EJt/lt^2\ \ qsst[\([1]\)] - 
            6  EJt/lt^2\ \ qsst[\([2]\)]];\)\), "\[IndentingNewLine]", 
    \(\(Tpd = 
        Simplify[
          12  EJc/lc^3\ \ qdst + 
            6  EJc/lc^2  qsst[\([2]\)]];\)\), "\[IndentingNewLine]", 
    \(\(Mpd = 
        Simplify[
          6  EJc/lc^2\ \ qdst + 
            2  EJc/lc\ qsst[\([2]\)]];\)\), "\[IndentingNewLine]", 
    \(NTMpd = {Npd, Tpd, Mpd}\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \(\(lc\^3\ \((3\ EJt\ F1\ lc + EJc\ \((2\ F1 - 3\ \((F2 + F3)\))\)\ lt)\)\
\)\/\(12\ EJc\ \((6\ EJt\ lc + EJc\ lt)\)\)\)], "Output"],

Cell[BoxData[
    \({\(lc\^2\ lt\ \((\(-EJt\)\ \((F1 - 8\ F2 + 4\ F3)\)\ lc + EJc\ \
\((\(-2\)\ F1 + 5\ F2 + 3\ F3)\)\ lt)\)\)\/\(24\ EJt\^2\ lc\^2 + 52\ EJc\ EJt\
\ lc\ lt + 8\ EJc\^2\ lt\^2\), \(lc\^2\ lt\ \((\(-EJt\)\ \((F1 + 4\ F2 - 8\ \
F3)\)\ lc + EJc\ \((\(-2\)\ F1 + 3\ F2 + 5\ F3)\)\ lt)\)\)\/\(24\ EJt\^2\ \
lc\^2 + 52\ EJc\ EJt\ lc\ lt + 8\ EJc\^2\ lt\^2\)}\)], "Output"],

Cell[BoxData[
    \({0, 0, 0}\)], "Output"],

Cell[BoxData[
    \({\(3\ EJt\ \((F1 - 2\ \((F2 + F3)\))\)\ lc\^2\)\/\(lt\ \((6\ EJt\ lc + \
EJc\ lt)\)\), \(EJt\ F1\ lc + EJc\ \((2\ F1 - 3\ F2 + 3\ F3)\)\ lt\)\/\(2\ \
EJt\ lc + 4\ EJc\ lt\), \(lc\ \((3\ EJt\^2\ F1\ lc\^2 + EJc\ EJt\ \((7\ F1 - \
7\ F2 + 5\ F3)\)\ lc\ lt + EJc\^2\ \((2\ F1 - 3\ F2 - F3)\)\ lt\^2)\)\)\/\(12\
\ EJt\^2\ lc\^2 + 26\ EJc\ EJt\ lc\ lt + 4\ EJc\^2\ lt\^2\)}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\("\<\>";\)\), "\[IndentingNewLine]", 
    \(\("\<Introduzione del rapporto di rigidezza trave/colonna \
rho=Sommatoria (EJt/lt) / Sommatoria (EJc/lc)\>";\)\), "\[IndentingNewLine]", \

    \(\(EJt = rho\ \ 2  EJc\ lt/lc;\)\), "\[IndentingNewLine]", 
    \(Kcondrho = Simplify[Kcond11]\), "\[IndentingNewLine]", 
    \(Plot[Kcondrho/\((6\ EJc/lc^3)\), {rho, 0, 10}, \ 
      PlotRange \[Rule] {{0, 10}, {1, 4}}, 
      AxesLabel \[Rule] {rho, k}]\)}], "Input"],

Cell[BoxData[
    \(\(6\ EJc\ \((1 + 12\ rho)\)\)\/\(lc\^3\ \((1 + 3\ rho)\)\)\)], "Output"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-2.77556e-017 0.1 -0.206011 0.206011 [
[.2 -0.0125 -3 -9 ]
[.2 -0.0125 3 0 ]
[.4 -0.0125 -3 -9 ]
[.4 -0.0125 3 0 ]
[.6 -0.0125 -3 -9 ]
[.6 -0.0125 3 0 ]
[.8 -0.0125 -3 -9 ]
[.8 -0.0125 3 0 ]
[1 -0.0125 -6 -9 ]
[1 -0.0125 6 0 ]
[1.025 0 0 -6.28125 ]
[1.025 0 22 6.28125 ]
[-0.0125 .10301 -18 -4.5 ]
[-0.0125 .10301 0 4.5 ]
[-0.0125 .20601 -6 -4.5 ]
[-0.0125 .20601 0 4.5 ]
[-0.0125 .30902 -18 -4.5 ]
[-0.0125 .30902 0 4.5 ]
[-0.0125 .41202 -6 -4.5 ]
[-0.0125 .41202 0 4.5 ]
[-0.0125 .51503 -18 -4.5 ]
[-0.0125 .51503 0 4.5 ]
[-0.0125 .61803 -6 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[0 .64303 -5 0 ]
[0 .64303 5 12.5625 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2 0 m
.2 .00625 L
s
[(2)] .2 -0.0125 0 1 Mshowa
.4 0 m
.4 .00625 L
s
[(4)] .4 -0.0125 0 1 Mshowa
.6 0 m
.6 .00625 L
s
[(6)] .6 -0.0125 0 1 Mshowa
.8 0 m
.8 .00625 L
s
[(8)] .8 -0.0125 0 1 Mshowa
1 0 m
1 .00625 L
s
[(10)] 1 -0.0125 0 1 Mshowa
.125 Mabswid
.05 0 m
.05 .00375 L
s
.1 0 m
.1 .00375 L
s
.15 0 m
.15 .00375 L
s
.25 0 m
.25 .00375 L
s
.3 0 m
.3 .00375 L
s
.35 0 m
.35 .00375 L
s
.45 0 m
.45 .00375 L
s
.5 0 m
.5 .00375 L
s
.55 0 m
.55 .00375 L
s
.65 0 m
.65 .00375 L
s
.7 0 m
.7 .00375 L
s
.75 0 m
.75 .00375 L
s
.85 0 m
.85 .00375 L
s
.9 0 m
.9 .00375 L
s
.95 0 m
.95 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
gsave
1.025 0 -61 -10.2813 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(rho) show
1.000 setlinewidth
grestore
0 .10301 m
.00625 .10301 L
s
[(1.5)] -0.0125 .10301 1 0 Mshowa
0 .20601 m
.00625 .20601 L
s
[(2)] -0.0125 .20601 1 0 Mshowa
0 .30902 m
.00625 .30902 L
s
[(2.5)] -0.0125 .30902 1 0 Mshowa
0 .41202 m
.00625 .41202 L
s
[(3)] -0.0125 .41202 1 0 Mshowa
0 .51503 m
.00625 .51503 L
s
[(3.5)] -0.0125 .51503 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(4)] -0.0125 .61803 1 0 Mshowa
.125 Mabswid
0 .0206 m
.00375 .0206 L
s
0 .0412 m
.00375 .0412 L
s
0 .0618 m
.00375 .0618 L
s
0 .0824 m
.00375 .0824 L
s
0 .12361 m
.00375 .12361 L
s
0 .14421 m
.00375 .14421 L
s
0 .16481 m
.00375 .16481 L
s
0 .18541 m
.00375 .18541 L
s
0 .22661 m
.00375 .22661 L
s
0 .24721 m
.00375 .24721 L
s
0 .26781 m
.00375 .26781 L
s
0 .28842 m
.00375 .28842 L
s
0 .32962 m
.00375 .32962 L
s
0 .35022 m
.00375 .35022 L
s
0 .37082 m
.00375 .37082 L
s
0 .39142 m
.00375 .39142 L
s
0 .43262 m
.00375 .43262 L
s
0 .45322 m
.00375 .45322 L
s
0 .47383 m
.00375 .47383 L
s
0 .49443 m
.00375 .49443 L
s
0 .53563 m
.00375 .53563 L
s
0 .55623 m
.00375 .55623 L
s
0 .57683 m
.00375 .57683 L
s
0 .59743 m
.00375 .59743 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
0 .64303 -66 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(k) show
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
0 0 m
.00488 .07892 L
.00942 .13623 L
.01483 .1903 L
.01975 .22993 L
.02981 .29176 L
.04057 .33926 L
.05147 .37511 L
.06331 .40487 L
.07354 .42527 L
.08481 .44366 L
.10564 .46979 L
.12772 .49012 L
.1481 .50449 L
.17002 .51673 L
.21331 .53451 L
.255 .54659 L
.2951 .55531 L
.33778 .56252 L
.37887 .56806 L
.42253 .57284 L
.4646 .57666 L
.50508 .57977 L
.54813 .5826 L
.58959 .58496 L
.62946 .58695 L
.67191 .58882 L
.71276 .59042 L
.75619 .59194 L
.79803 .59325 L
.83827 .5944 L
.8811 .59551 L
.92232 .59648 L
.96196 .59734 L
1 .5981 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00@P3oool4000002h0oooo0`00000Z0?ooo`<00000;P3oool2000002T0oooo1@0000020?oo
o`8000006P3oool00480oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`0Y0?ooo`04
0000003oool0oooo000002`0oooo00@000000?ooo`3oool00000:P3oool01@000000oooo0?ooo`3o
ool000000080oooo00<000000?ooo`3oool05`3oool004<0oooo00<000000?ooo`3oool0;03oool5
000002X0oooo00@000000?ooo`3oool00000;03oool010000000oooo0?ooo`00000Z0?ooo`050000
003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0G0?ooo`00A03oool00`000000oooo
0?ooo`0[0?ooo`040000003oool0oooo000002/0oooo0`00000^0?ooo`800000:`3oool01@000000
oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool05`3oool00480oooo00@000000?ooo`3o
ool00000;@3oool00`000000oooo0000000/0?ooo`030000003oool0oooo02`0oooo00@000000?oo
o`3oool00000:P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool05`3o
ool004<0oooo0P00000_0?ooo`800000;03oool3000002d0oooo0P00000Z0?ooo`800000103oool2
000001X0oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooo``0oooo1000
00001@3oool00000000000000000oooo008000000P3oool2000000H0oooo003o0?ooo`d0oooo00<0
00000?ooo`3oool00P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000D0
oooo000E0?ooonh000002@3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo00000080
oooo00@000000?ooo`3oool000001@3oool001D0oooo00<000000?ooo`3oool0;03oool00`000000
oooo0?ooo`0]0?ooo`030000003oool0oooo02`0oooo00<000000?ooo`3oool0;@3oool00`000000
oooo0?ooo`0/0?ooo`030000003oool0oooo00H0oooo100000020?ooo`<00000103oool2000000H0
oooo000E0?ooo`030000003oool0oooo0?T0oooo00<000000?ooo`3oool0303oool001D0oooo00<0
00000?ooo`3oool0n03oool2000000h0oooo000E0?ooo`800000o`3oool:0?ooo`005@3oool00`00
0000oooo0?ooo`3o0?ooo`T0oooo000E0?ooo`030000003oool0oooo0?l0oooo2@3oool001D0oooo
00<000000?ooo`3oool0o`3oool90?ooo`005@3oool00`000000oooo0?ooo`3o0?ooo`T0oooo000E
0?ooo`800000o`3oool:0?ooo`005@3oool200000?l0oooo2P3oool001D0oooo0P00003o0?ooo`X0
oooo000E0?ooo`800000o`3oool:0?ooo`005@3oool200000?l0oooo2P3oool001D0oooo0P00003o
0?ooo`X0oooo000E0?ooo`800000o`3oool:0?ooo`005@3oool200000?l0oooo2P3oool001D0oooo
0P00003o0?ooo`X0oooo000E0?ooo`800000o`3oool:0?ooo`005@3oool200000?l0oooo2P3oool0
01D0oooo0P00003o0?ooo`X0oooo000E0?ooo`800000o`3oool:0?ooo`0000<0oooo000000000000
0`0000020?ooo`800000103oool2000000D0oooo0P00003o0?ooo`X0oooo00030?ooo`030000003o
ool0oooo00L0oooo00@000000?ooo`3oool00000103oool200000?l0oooo2P3oool000<0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`020?ooo`800000o`3oool:0?ooo`000`3oool0
0`000000oooo0?ooo`080?ooo`8000001@3oool200000?l0oooo2P3oool000<0oooo00<000000?oo
o`3oool0203oool00`000000oooo0?ooo`040?ooo`030000003oool000000?l0oooo2@3oool00080
oooo0P00000:0?ooo`<00000103oool00`000000oooo0000003o0?ooo`T0oooo000E0?ooo`030000
003oool000000?l0oooo2@3oool001D0oooo0`00003o0?ooo`T0oooo000E0?ooo`030000003oool0
00000?l0oooo2@3oool001D0oooo00<000000?ooo`000000o`3oool90?ooo`005@3oool00`000000
oooo0000003o0?ooo`T0oooo000E0?ooo`030000003oool000000?l0oooo2@3oool001D0oooo0`00
003o0?ooo`T0oooo000E0?ooo`030000003oool000000?l0oooo2@3oool001D0oooo00@000000?oo
o`3oool00000o`3oool80?ooo`005@3oool010000000oooo0?ooo`00003o0?ooo`P0oooo000E0?oo
o`040000003oool0oooo00000?l0oooo203oool001D0oooo0P0000000`3oool000000?ooo`3o0?oo
o`L0oooo000E0?ooo`040000003oool0oooo00000?l0oooo203oool001D0oooo00@000000?ooo`3o
ool00000o`3oool80?ooo`005@3oool01@000000oooo0?ooo`3oool000000?l0oooo1`3oool001D0
oooo0P0000020?ooo`030000003oool0oooo0?l0oooo1@3oool001D0oooo00D000000?ooo`3oool0
oooo0000003o0?ooo`L0oooo000E0?ooo`050000003oool0oooo0?ooo`000000o`3oool70?ooo`00
3@3oool4000000@0oooo00D000000?ooo`3oool0oooo0000003o0?ooo`L0oooo000=0?ooo`030000
003oool0oooo00D0oooo00D000000?ooo`3oool0oooo0000003o0?ooo`L0oooo000>0?ooo`030000
003oool0oooo00@0oooo0P0000020?ooo`030000003oool0oooo0?l0oooo1@3oool000l0oooo00<0
00000?ooo`3oool00`3oool01@000000oooo0?ooo`3oool000000?l0oooo1`3oool000d0oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0?l0oooo
103oool000h0oooo0P0000050?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0o`3o
ool40?ooo`005@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0?l0oooo103oool0
01D0oooo0P0000030?ooo`030000003oool0oooo0?l0oooo103oool001D0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo000E0?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool0o`3oool40?ooo`005@3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo0?l0oooo103oool001D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3o
0?ooo`@0oooo000E0?ooo`800000103oool00`000000oooo0?ooo`3o0?ooo`<0oooo000E0?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool0o`3oool30?ooo`005@3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo0?l0oooo0`3oool001D0oooo00<000000?ooo`3oool00`3o
ool00`000000oooo0?ooo`3o0?ooo`<0oooo000E0?ooo`030000003oool0oooo00<0oooo00<00000
0?ooo`3oool0o`3oool30?ooo`005@3oool2000000@0oooo00<000000?ooo`3oool0o`3oool30?oo
o`005@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0oooo0`3oool001D0oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo000E0?ooo`030000003o
ool0oooo00@0oooo00<000000?ooo`3oool0o`3oool20?ooo`005@3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo0?l0oooo0P3oool001D0oooo0P0000050?ooo`030000003oool0oooo
0?l0oooo0P3oool001D0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`3o0?ooo`80
oooo000E0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0o`3oool20?ooo`0000<0
oooo0000000000000P0000030?ooo`800000103oool2000000D0oooo00<000000?ooo`3oool01@3o
ool00`000000oooo0?ooo`3o0?ooo`40oooo00000`3oool000000?ooo`0:0?ooo`040000003oool0
oooo000000@0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`3o0?ooo`40oooo0002
0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00P3oool2000000H0oooo00<00000
0?ooo`3oool0o`3oool10?ooo`000`3oool00`000000oooo0?ooo`080?ooo`8000001@3oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo0@3oool000050?ooo`000000oooo0?oo
o`0000002@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0o`3oool00080oooo0P00000:0?ooo`<00000103oool00`000000oooo0?ooo`060?ooo`03
0000003oool0oooo0?l0oooo000E0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
o`3oool001D0oooo0P0000070?ooo`030000003oool0oooo0?l0oooo000E0?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`3oool0oP3oool001D0oooo00<000000?ooo`3oool01`3oool00`00
0000oooo0?ooo`3n0?ooo`005@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?h0
oooo000E0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0oP3oool001D0oooo0P00
00090?ooo`030000003oool0oooo0?d0oooo000E0?ooo`030000003oool0oooo00P0oooo00<00000
0?ooo`3oool0o@3oool001D0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`3m0?oo
o`005@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?d0oooo000E0?ooo`800000
2P3oool00`000000oooo0?ooo`3l0?ooo`005@3oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo0?`0oooo000E0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0o03oool0
01D0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`3k0?ooo`005@3oool00`000000
oooo0?ooo`0:0?ooo`030000003oool0oooo0?/0oooo000E0?ooo`800000303oool00`000000oooo
0?ooo`3j0?ooo`005@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo0?X0oooo000E
0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0n@3oool000h0oooo0P0000050?oo
o`030000003oool0oooo00`0oooo00<000000?ooo`3oool0n@3oool000d0oooo00@000000?ooo`3o
ool00000103oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0?T0oooo000?0?ooo`03
0000003oool0oooo00<0oooo0P00000>0?ooo`030000003oool0oooo0?P0oooo000@0?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`3h0?ooo`003@3o
ool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0
m`3oool000h0oooo0P0000050?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0m`3o
ool001D0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`3f0?ooo`005@3oool20000
0100oooo00<000000?ooo`3oool0mP3oool001D0oooo00<000000?ooo`3oool0403oool00`000000
oooo0?ooo`3e0?ooo`005@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0?D0oooo
000E0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0m03oool001D0oooo00<00000
0?ooo`3oool04P3oool00`000000oooo0?ooo`3c0?ooo`005@3oool2000001@0oooo00<000000?oo
o`3oool0lP3oool001D0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`3b0?ooo`00
5@3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0?40oooo000E0?ooo`030000003o
ool0oooo01D0oooo00<000000?ooo`3oool0l03oool001D0oooo00<000000?ooo`3oool05P3oool0
0`000000oooo0?ooo`3_0?ooo`005@3oool2000001P0oooo00<000000?ooo`3oool0kP3oool001D0
oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`3]0?ooo`005@3oool00`000000oooo
0?ooo`0I0?ooo`030000003oool0oooo0>`0oooo000E0?ooo`030000003oool0oooo01X0oooo00<0
00000?ooo`3oool0j`3oool001D0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`3Z
0?ooo`005@3oool2000001d0oooo0P00003Z0?ooo`005@3oool00`000000oooo0?ooo`0N0?ooo`80
0000j03oool001D0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`3U0?ooo`000P3o
ool2000000@0oooo0P0000040?ooo`8000001@3oool00`000000oooo0?ooo`0Q0?ooo`800000i@3o
ool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000040?ooo`030000
003oool0oooo02<0oooo0P00003S0?ooo`000`3oool00`000000oooo0?ooo`0:0?ooo`030000003o
ool0oooo0080oooo0P00000V0?ooo`800000h@3oool000@0oooo00<000000?ooo`3oool01`3oool2
000000D0oooo00<000000?ooo`3oool09`3oool300000=h0oooo00001@3oool000000?ooo`3oool0
000000T0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0Z0?ooo`800000g03oool0
0080oooo0P00000:0?ooo`<00000103oool00`000000oooo0?ooo`0/0?ooo`<00000f@3oool001D0
oooo0P00000`0?ooo`<00000eP3oool001D0oooo00<000000?ooo`3oool0<P3oool300000=<0oooo
000E0?ooo`030000003oool0oooo03D0oooo0`00003@0?ooo`005@3oool00`000000oooo0?ooo`0h
0?ooo`@00000c03oool001D0oooo00<000000?ooo`3oool0?03oool500000<L0oooo000E0?ooo`80
0000@P3oool500000<80oooo000E0?ooo`030000003oool0oooo04H0oooo1@00002m0?ooo`005@3o
ool00`000000oooo0?ooo`1;0?ooo`L00000]P3oool001D0oooo00<000000?ooo`3oool0DP3oool:
00000:`0oooo000E0?ooo`030000003oool0oooo05`0oooo2P00002R0?ooo`005@3oool2000006L0
oooo2P00002H0?ooo`005@3oool00`000000oooo0?ooo`1`0?ooo`X00000SP3oool001D0oooo00<0
00000?ooo`3oool0NP3ooolD000007X0oooo000E0?ooo`030000003oool0oooo08h0oooo7@00001M
0?ooo`005@3oool00`000000oooo0?ooo`2[0?oooah00000?`3oool001D0oooo0P00003:0?ooob40
00007P3oool001D0oooo00<000000?ooo`3oool0o`3oool90?ooo`005@3oool00`000000oooo0?oo
o`3o0?ooo`T0oooo000?0?ooo`<000000`3oool00`000000oooo0?ooo`3o0?ooo`T0oooo000@0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0o`3oool90?ooo`003@3oool5000000<0
oooo0P00003o0?ooo`X0oooo000=0?ooo`040000003oool0oooo00000?l0oooo403oool000h0oooo
00<000000?ooo`000000o`3oool@0?ooo`003`3oool200000?l0oooo403oool00?l0oooo8@3oool0
0?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool0
0?l0oooo8@3oool00180oooo0P0000000`3oool000000000003o0?ooo`X0oooo000C0?ooo`030000
003oool000000?l0oooo2`3oool001<0oooo0`00003o0?ooo`/0oooo000C0?ooo`040000003oool0
000000000?l0oooo2P3oool001<0oooo00<000000?ooo`3oool0o`3oool;0?ooo`004P3oool20000
0?l0oooo3@3oool00?l0oooo8@3oool00?l0oooo8@3oool00001\
\>"],
  ImageRangeCache->{{{74.5, 303.875}, {727.25, 585.938}} -> {-4.84948, \
15.7832, 0.0422714, 0.020519}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\("\<\>";\)\), "\[IndentingNewLine]", 
    \(\("\<Alcuni valori caratteristici del coefficiente k che premoltiplica \
6 EJc/lc^3\>";\)\), "\[IndentingNewLine]", 
    \(\(k = Kcondrho/\((6\ EJc/lc^3)\);\)\), "\[IndentingNewLine]", 
    \({k /. {rho \[Rule] 0}, \[IndentingNewLine]k /. \ {rho \[Rule] 
            1/4}, \[IndentingNewLine]k /. \ {rho \[Rule] 
            1/2}, \[IndentingNewLine]k /. \ {rho \[Rule] 
            1}, \[IndentingNewLine]k /. \ {rho \[Rule] 
            2}, \[IndentingNewLine]k /. \ {rho \[Rule] 
            4}, \[IndentingNewLine]k /. \ {rho \[Rule] 
            6}, \[IndentingNewLine]k /. \ {rho \[Rule] 
            8}, \[IndentingNewLine]k /. \ {rho \[Rule] 
            10}, \[IndentingNewLine]Limit[k\ , \ 
        rho \[Rule] Infinity]}\)}], "Input"],

Cell[BoxData[
    \({1, 16\/7, 14\/5, 13\/4, 25\/7, 49\/13, 73\/19, 97\/25, 121\/31, 
      4}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\("\<\>";\)\), "\[IndentingNewLine]", 
    \(\("\<Soluzione in funzione di rho, con casi estremi (rho=0 e \
rho->infinito)\>";\)\), "\[IndentingNewLine]", 
    \(NTMpdrho = Simplify[NTMpd]\), "\[IndentingNewLine]", 
    \(NTMpd0 = Simplify[NTMpd /. {rho \[Rule] 0}]\), "\[IndentingNewLine]", 
    \(NTMpdinf = 
      Simplify[Limit[NTMpd, 
          rho \[Rule] 
            Infinity]]\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(qstrho = 
      Simplify[{qdst, qsst[\([1]\)], 
          qsst[\([2]\)]}]\), "\[IndentingNewLine]", 
    \(qst0 = 
      Simplify[{qdst, qsst[\([1]\)], 
            qsst[\([2]\)]} /. {rho \[Rule] 0}]\), "\[IndentingNewLine]", 
    \(qstinf = 
      Simplify[Limit[{qdst, qsst[\([1]\)], qsst[\([2]\)]}, 
          rho \[Rule] Infinity]]\)}], "Input"],

Cell[BoxData[
    \({\(6\ \((F1 - 2\ \((F2 + F3)\))\)\ lc\ rho\)\/\(lt + 12\ lt\ rho\), \(2\
\ F1 - 3\ F2 + 3\ F3 + 2\ F1\ rho\)\/\(4 + 4\ rho\), \(lc\ \((\(-3\)\ F2 - F3 \
- 14\ F2\ rho + 10\ F3\ rho + 2\ F1\ \((1 + 7\ rho + 6\ rho\^2)\))\)\)\/\(4 + \
52\ rho + 48\ rho\^2\)}\)], "Output"],

Cell[BoxData[
    \({0, 1\/4\ \((2\ F1 - 3\ F2 + 3\ F3)\), 
      1\/4\ \((2\ F1 - 3\ F2 - F3)\)\ lc}\)], "Output"],

Cell[BoxData[
    \({\(\((F1 - 2\ \((F2 + F3)\))\)\ lc\)\/\(2\ lt\), 
      F1\/2, \(F1\ lc\)\/4}\)], "Output"],

Cell[BoxData[
    \({\(lc\^3\ \((\(-3\)\ \((F2 + F3)\) + F1\ \((2 + 6\ rho)\))\)\)\/\(12\ \
\((EJc + 12\ EJc\ rho)\)\), \(-\(\(lc\^2\ \((2\ F1\ \((1 + rho)\) + 
                  F3\ \((\(-3\) + 8\ rho)\) - 
                  F2\ \((5 + 16\ rho)\))\)\)\/\(8\ EJc\ \((1 + 13\ rho + 
                  12\ rho\^2)\)\)\)\), \(-\(\(lc\^2\ \((2\ F1\ \((1 + 
                        rho)\) + F2\ \((\(-3\) + 8\ rho)\) - 
                  F3\ \((5 + 16\ rho)\))\)\)\/\(8\ EJc\ \((1 + 13\ rho + 
                  12\ rho\^2)\)\)\)\)}\)], "Output"],

Cell[BoxData[
    \({\(\((2\ F1 - 3\ \((F2 + F3)\))\)\ lc\^3\)\/\(12\ EJc\), \(\((\(-2\)\ \
F1 + 5\ F2 + 3\ F3)\)\ lc\^2\)\/\(8\ EJc\), \(\((\(-2\)\ F1 + 3\ F2 + 5\ \
F3)\)\ lc\^2\)\/\(8\ EJc\)}\)], "Output"],

Cell[BoxData[
    \({\(F1\ lc\^3\)\/\(24\ EJc\), 0, 0}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\("\<\>";\)\), "\n", 
    \(\(\("\<Soluzione alternativa col Metodo delle Forze tramite il \
PLV\>";\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(\("\<Scelta delle tre incognite iperstatiche: 
 X1=Npd (positiva verso l'alto),
 X2=Tpd (positiva verso sinistra),
 X3=Mpd (positiva antioraria)\>";\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\("\<Momento nella struttura principale isostatica\>";\)\), "\
\[IndentingNewLine]", 
    \(\(M0a = 0;\)\), "\n", 
    \(\(M0b = F3\ lc;\)\), "\n", 
    \(\(\(M0c = \((F2 + F3\ )\) lc - F1\ x;\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\("\<Momenti nella tre strutture fittizie\>";\)\), "\n", 
    \(\(M1a = 0;\)\), "\n", 
    \(\(M1b = x;\)\), "\n", 
    \(\(\(M1c = lt;\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(M2a = \(-x\);\)\), "\n", 
    \(\(M2b = \(-lc\);\)\), "\n", 
    \(\(\(M2c = \(-lc\) + x;\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(M3a = 1;\)\), "\n", 
    \(\(M3b = 1;\)\), "\n", 
    \(\(\(M3c = 1;\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(\("\<Calcolo degli integrali da PLV\>";\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(A11 = 
        Simplify[
          Integrate[M1a\ M1a\ /EJc + M1c\ M1c\ /EJc, {x, 0, lc}] + 
            Integrate[M1b\ M1b\ /EJt, {x, 0, lt}]];\)\), "\n", 
    \(\(A12 = 
        Simplify[
          Integrate[M1a\ M2a\ /EJc + M1c\ M2c\ /EJc, {x, 0, lc}] + 
            Integrate[M1b\ M2b\ /EJt, {x, 0, lt}]];\)\), "\n", 
    \(\(A13 = 
        Simplify[
          Integrate[M1a\ M3a\ /EJc + M1c\ M3c\ /EJc, {x, 0, lc}] + 
            Integrate[M1b\ M3b\ /EJt, {x, 0, lt}]];\)\), "\n", 
    \(\(A22 = 
        Simplify[
          Integrate[M2a\ M2a\ /EJc + M2c\ M2c\ /EJc, {x, 0, lc}] + 
            Integrate[M2b\ M2b\ /EJt, {x, 0, lt}]];\)\), "\n", 
    \(\(A23 = 
        Simplify[
          Integrate[M2a\ M3a\ /EJc + M2c\ M3c\ /EJc, {x, 0, lc}] + 
            Integrate[M2b\ M3b\ /EJt, {x, 0, lt}]];\)\), "\n", 
    \(\(\(A33 = 
        Simplify[
          Integrate[M3a\ M3a\ /EJc + M3c\ M3c\ /EJc, {x, 0, lc}] + 
            Integrate[M3b\ M3b\ /EJt, {x, 0, lt}]];\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(a10 = 
        Simplify[\(-Integrate[
                M1a\ M0a\ /EJc + M1c\ M0c\ /EJc, {x, 0, lc}]\) - 
            Integrate[M1b\ M0b\ /EJt, {x, 0, lt}]];\)\), "\n", 
    \(\(a20 = 
        Simplify[\(-Integrate[
                M2a\ M0a\ /EJc + M2c\ M0c\ /EJc, {x, 0, lc}]\) - 
            Integrate[M2b\ M0b\ /EJt, {x, 0, lt}]];\)\), "\n", 
    \(\(\(a30 = 
        Simplify[\(-Integrate[
                M3a\ M0a\ /EJc + M3c\ M0c\ /EJc, {x, 0, lc}]\) - 
            Integrate[M3b\ M0b\ /EJt, {x, 0, lt}]];\)\(\[IndentingNewLine]\)
    \)\), "\n", 
    \(\(A = {{A11, A12, A13}, \[IndentingNewLine]\ \ {A12, A22, 
            A23}, \[IndentingNewLine]\ \ {A13, A23, A33}};\)\), "\n", 
    \(\(\(a = {a10, \[IndentingNewLine]\ \ a20, \[IndentingNewLine]\ \ \
a30};\)\(\[IndentingNewLine]\)
    \)\), "\n", 
    \(\("\<Vettore incognite iperstatiche in soluzione\>";\)\ \), "\n", 
    \(\(\(X = Simplify[LinearSolve[A, a]]\)\(\[IndentingNewLine]\)
    \)\), "\n", 
    \(\("\<Controllo delle soluzioni statiche coi due metodi degli \
spostamenti e delle forze\>";\)\), "\[IndentingNewLine]", 
    \(checkNTMpd = Simplify[NTMpd - X]\)}], "Input"],

Cell[BoxData[
    \({\(6\ \((F1 - 2\ \((F2 + F3)\))\)\ lc\ rho\)\/\(lt + 12\ lt\ rho\), \(2\
\ F1 - 3\ F2 + 3\ F3 + 2\ F1\ rho\)\/\(4 + 4\ rho\), \(lc\ \((\(-3\)\ F2 - F3 \
- 14\ F2\ rho + 10\ F3\ rho + 2\ F1\ \((1 + 7\ rho + 6\ rho\^2)\))\)\)\/\(4 + \
52\ rho + 48\ rho\^2\)}\)], "Output"],

Cell[BoxData[
    \({0, 0, 0}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\("\<\>";\)\), "\[IndentingNewLine]", 
    \(\("\<Calcolo spostamenti col PLV\>";\)\), "\[IndentingNewLine]", 
    \(\(Ma = 
        M0a + X[\([1]\)]\ M1a + X[\([2]\)]\ M2a + 
          X[\([3]\)]\ M3a;\)\), "\[IndentingNewLine]", 
    \(\(Mb = 
        M0b + X[\([1]\)]\ M1b + X[\([2]\)]\ M2b + 
          X[\([3]\)]\ M3b;\)\), "\[IndentingNewLine]", 
    \(\(\(Mc = 
        M0c + X[\([1]\)]\ M1c + X[\([2]\)]\ M2c + 
          X[\([3]\)]\ M3c;\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(u = 
        Simplify[Integrate[\((\(-x\))\)\ Mc\ /EJc, {x, 0, lc}]];\)\), "\n", 
    \(\(phi1 = 
        Simplify[
          Integrate[\((1)\)\ Mc\ /EJc, {x, 0, 
              lc}]];\)\), "\[IndentingNewLine]", 
    \(\(\(phi2 = 
        Simplify[
          Integrate[\((1)\)\ Mc\ /EJc, {x, 0, lc}] + 
            Integrate[\((1)\)\ Mb\ /EJt, {x, 0, 
                lt}]];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(qstPLV = {u, phi1, phi2}\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\("\<Controllo delle soluzioni cinematiche coi due metodi degli \
spostamenti e delle forze\>";\)\), "\[IndentingNewLine]", 
    \(checkqst = Simplify[qst - qstPLV]\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \({\(lc\^3\ \((\(-3\)\ \((F2 + F3)\) + F1\ \((2 + 6\ rho)\))\)\)\/\(12\ \
\((EJc + 12\ EJc\ rho)\)\), \(lc\^2\ \((F3\ \((3 - 8\ rho)\) - 2\ F1\ \((1 + \
rho)\) + F2\ \((5 + 16\ rho)\))\)\)\/\(8\ EJc\ \((1 + 13\ rho + 12\ rho\^2)\)\
\), \(lc\^2\ \((F2\ \((3 - 8\ rho)\) - 2\ F1\ \((1 + rho)\) + F3\ \((5 + 16\ \
rho)\))\)\)\/\(8\ EJc\ \((1 + 13\ rho + 12\ rho\^2)\)\)}\)], "Output"],

Cell[BoxData[
    \({0, 0, 0}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\("\<\>";\)\), "\[IndentingNewLine]", 
    \(\(\("\<Condizione di carico con la sola forza orizzontale F1 sul \
traverso\>";\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(NTMpdF1 = 
      Simplify[NTMpd\  /. \ {F2 \[Rule] 0, 
            F3 \[Rule] 0}]\), "\[IndentingNewLine]", 
    \(\(\(qstF1 = 
      Simplify[qst /. \ {F2 \[Rule] 0, 
            F3 \[Rule] 0}]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\("\<Andamento dello spostamento orizzontale u=f F lc^3/EJc del \
traverso in funzione di rho\>";\)\), "\[IndentingNewLine]", 
    \(Plot[qstF1[\([1]\)]\ *\((\(EJc/lc^3\)/F1)\), {rho, 0, 10}, \ 
      PlotRange \[Rule] {{0, 10}, {0.04, 
            0.18}}, \[IndentingNewLine]\ \ AxesLabel \[Rule] {rho, \
"\<f=1/(6k)\>"}, \ 
      AxesOrigin \[Rule] {0, 
          0.03999}]\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\("\<Caso del traverso infinitamente flessibile (rho = 0) ed
 infinitamente rigido (rho -> infinito)\>";\)\), "\[IndentingNewLine]", 
    \(Simplify[NTMpdF1\  /. \ {rho \[Rule] 0}]\), "\[IndentingNewLine]", 
    \(Simplify[
      qstF1 /. \ {rho \[Rule] 
            0}]\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(Simplify[
      Limit[NTMpdF1\ , \ rho \[Rule] Infinity]]\), "\[IndentingNewLine]", 
    \(Simplify[
      Limit[qstF1, \ rho \[Rule] Infinity]]\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \({\(6\ F1\ lc\ rho\)\/\(lt + 12\ lt\ rho\), 
      F1\/2, \(lc\ \((F1 + 6\ F1\ rho)\)\)\/\(2 + 24\ rho\)}\)], "Output"],

Cell[BoxData[
    \({\(lc\^3\ \((F1 + 3\ F1\ rho)\)\)\/\(6\ \((EJc + 12\ EJc\ rho)\)\), \
\(F1\ lc\^2\)\/\(\(-4\)\ EJc - 48\ EJc\ rho\), \(F1\ lc\^2\)\/\(\(-4\)\ EJc - \
48\ EJc\ rho\)}\)], "Output"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-2.77556e-017 0.1 -0.176581 4.41453 [
[.2 -0.01254 -3 -9 ]
[.2 -0.01254 3 0 ]
[.4 -0.01254 -3 -9 ]
[.4 -0.01254 3 0 ]
[.6 -0.01254 -3 -9 ]
[.6 -0.01254 3 0 ]
[.8 -0.01254 -3 -9 ]
[.8 -0.01254 3 0 ]
[1 -0.01254 -6 -9 ]
[1 -0.01254 6 0 ]
[1.025 -4e-005 0 -6.28125 ]
[1.025 -4e-005 22 6.28125 ]
[-0.0125 0 -24 -4.5 ]
[-0.0125 0 0 4.5 ]
[-0.0125 .08829 -24 -4.5 ]
[-0.0125 .08829 0 4.5 ]
[-0.0125 .17658 -24 -4.5 ]
[-0.0125 .17658 0 4.5 ]
[-0.0125 .26487 -18 -4.5 ]
[-0.0125 .26487 0 4.5 ]
[-0.0125 .35316 -24 -4.5 ]
[-0.0125 .35316 0 4.5 ]
[-0.0125 .44145 -24 -4.5 ]
[-0.0125 .44145 0 4.5 ]
[-0.0125 .52974 -24 -4.5 ]
[-0.0125 .52974 0 4.5 ]
[-0.0125 .61803 -24 -4.5 ]
[-0.0125 .61803 0 4.5 ]
[0 .64303 -26 0 ]
[0 .64303 26 12.5625 ]
[ 0 -4e-005 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2 -4e-005 m
.2 .00621 L
s
[(2)] .2 -0.01254 0 1 Mshowa
.4 -4e-005 m
.4 .00621 L
s
[(4)] .4 -0.01254 0 1 Mshowa
.6 -4e-005 m
.6 .00621 L
s
[(6)] .6 -0.01254 0 1 Mshowa
.8 -4e-005 m
.8 .00621 L
s
[(8)] .8 -0.01254 0 1 Mshowa
1 -4e-005 m
1 .00621 L
s
[(10)] 1 -0.01254 0 1 Mshowa
.125 Mabswid
.05 -4e-005 m
.05 .00371 L
s
.1 -4e-005 m
.1 .00371 L
s
.15 -4e-005 m
.15 .00371 L
s
.25 -4e-005 m
.25 .00371 L
s
.3 -4e-005 m
.3 .00371 L
s
.35 -4e-005 m
.35 .00371 L
s
.45 -4e-005 m
.45 .00371 L
s
.5 -4e-005 m
.5 .00371 L
s
.55 -4e-005 m
.55 .00371 L
s
.65 -4e-005 m
.65 .00371 L
s
.7 -4e-005 m
.7 .00371 L
s
.75 -4e-005 m
.75 .00371 L
s
.85 -4e-005 m
.85 .00371 L
s
.9 -4e-005 m
.9 .00371 L
s
.95 -4e-005 m
.95 .00371 L
s
.25 Mabswid
0 -4e-005 m
1 -4e-005 L
s
gsave
1.025 -4e-005 -61 -10.2813 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(rho) show
1.000 setlinewidth
grestore
0 0 m
.00625 0 L
s
[(0.04)] -0.0125 0 1 0 Mshowa
0 .08829 m
.00625 .08829 L
s
[(0.06)] -0.0125 .08829 1 0 Mshowa
0 .17658 m
.00625 .17658 L
s
[(0.08)] -0.0125 .17658 1 0 Mshowa
0 .26487 m
.00625 .26487 L
s
[(0.1)] -0.0125 .26487 1 0 Mshowa
0 .35316 m
.00625 .35316 L
s
[(0.12)] -0.0125 .35316 1 0 Mshowa
0 .44145 m
.00625 .44145 L
s
[(0.14)] -0.0125 .44145 1 0 Mshowa
0 .52974 m
.00625 .52974 L
s
[(0.16)] -0.0125 .52974 1 0 Mshowa
0 .61803 m
.00625 .61803 L
s
[(0.18)] -0.0125 .61803 1 0 Mshowa
.125 Mabswid
0 .02207 m
.00375 .02207 L
s
0 .04415 m
.00375 .04415 L
s
0 .06622 m
.00375 .06622 L
s
0 .11036 m
.00375 .11036 L
s
0 .13244 m
.00375 .13244 L
s
0 .15451 m
.00375 .15451 L
s
0 .19865 m
.00375 .19865 L
s
0 .22073 m
.00375 .22073 L
s
0 .2428 m
.00375 .2428 L
s
0 .28694 m
.00375 .28694 L
s
0 .30902 m
.00375 .30902 L
s
0 .33109 m
.00375 .33109 L
s
0 .37523 m
.00375 .37523 L
s
0 .39731 m
.00375 .39731 L
s
0 .41938 m
.00375 .41938 L
s
0 .46353 m
.00375 .46353 L
s
0 .4856 m
.00375 .4856 L
s
0 .50767 m
.00375 .50767 L
s
0 .55182 m
.00375 .55182 L
s
0 .57389 m
.00375 .57389 L
s
0 .59596 m
.00375 .59596 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
0 .64303 -87 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(f) show
69.000 12.813 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(=) show
75.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
81.000 12.813 moveto
(\\220) show
87.000 12.813 moveto
(H) show
93.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(6) show
99.000 12.813 moveto
(k) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
105.000 12.813 moveto
(L) show
111.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
0 .55917 m
.00123 .48798 L
.00236 .43749 L
.00357 .39378 L
.00488 .35539 L
.00722 .30309 L
.00942 .26631 L
.01203 .23317 L
.01479 .2062 L
.01975 .17111 L
.02221 .1579 L
.02486 .14588 L
.02966 .12841 L
.03535 .11262 L
.04057 .1014 L
.05141 .08433 L
.05755 .07716 L
.06325 .0716 L
.07435 .06297 L
.08481 .05673 L
.09516 .05179 L
.10636 .04745 L
.12589 .04162 L
.14683 .03699 L
.16895 .0333 L
.20882 .02853 L
.2293 .02671 L
.25126 .02507 L
.29469 .02253 L
.33653 .02069 L
.37678 .0193 L
.4196 .0181 L
.46083 .01716 L
.50047 .0164 L
.54268 .0157 L
.5833 .01513 L
.6265 .0146 L
.6681 .01416 L
.70812 .01378 L
.75071 .01342 L
.7917 .01311 L
.83528 .01281 L
.87726 .01255 L
.91765 .01232 L
.96061 .0121 L
1 .01192 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00A`3oool4000002`0oooo0`00000Z0?ooo`<00000;03oool2000002T0
oooo1@0000020?ooo`8000006@3oool004L0oooo00<000000?ooo`3oool0;P3oool00`000000oooo
0?ooo`0Y0?ooo`040000003oool0oooo000002X0oooo00@000000?ooo`3oool00000:P3oool01@00
0000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool05P3oool004P0oooo00<000000?oo
o`3oool0:P3oool5000002X0oooo00@000000?ooo`3oool00000:P3oool010000000oooo0?ooo`00
000Z0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0F0?ooo`00B@3o
ool00`000000oooo0?ooo`0Y0?ooo`040000003oool0oooo000002/0oooo0`00000/0?ooo`800000
:`3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool05P3oool004L0oooo
00@000000?ooo`3oool00000:`3oool00`000000oooo0000000/0?ooo`030000003oool0oooo02X0
oooo00@000000?ooo`3oool00000:P3oool01@000000oooo0?ooo`3oool000000080oooo00<00000
0?ooo`3oool05P3oool004P0oooo0P00000]0?ooo`800000;03oool3000002/0oooo0P00000Z0?oo
o`800000103oool2000001T0oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo0002
0?ooo`800000103oool2000000@0oooo0P0000050?ooo`<00000m03oool4000000050?ooo`000000
00000000003oool00P0000020?ooo`8000001@3oool000050?ooo`000000oooo0?ooo`000000203o
ool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo0?@0oooo00<000000?ooo`3oool0
0P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0oooo00001@3oool0
00000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool500000080oooojP000009
0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?oo
o`0000040?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080
oooo00@000000?ooo`3oool000000`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool01P3oool400000080oooo0`0000040?ooo`8000001@3oool00005
0?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000030?ooo`030000003oool0
000000<0oooo00<000000?ooo`3oool0m@3oool00`000000oooo0?ooo`0;0?ooo`000P3oool20000
00X0oooo0P0000050?ooo`8000000`3oool00`000000oooo0?ooo`2;0?oooe/000003P3oool20000
00d0oooo000J0?ooo`030000003oool0oooo05/0oooo<000001h0?ooo`006P3oool2000003l0oooo
7@00002X0?ooo`006P3oool00`000000oooo0?ooo`0a0?ooo`d00000a@3oool001X0oooo00<00000
0?ooo`3oool0:P3oool700000=80oooo000J0?ooo`030000003oool0oooo02<0oooo1`00003I0?oo
o`006P3oool00`000000oooo0?ooo`0N0?ooo`D00000h03oool001X0oooo0P00000J0?ooo`D00000
i@3oool001X0oooo00<000000?ooo`3oool05P3oool300000>X0oooo000J0?ooo`030000003oool0
oooo01<0oooo0`00003]0?ooo`006P3oool00`000000oooo0?ooo`0A0?ooo`800000l03oool001X0
oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`3`0?ooo`006P3oool200000100oooo
00<000000?ooo`3oool0l@3oool001X0oooo00<000000?ooo`3oool03@3oool200000?@0oooo000J
0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0m03oool001X0oooo00<000000?oo
o`3oool02`3oool00`000000oooo0?ooo`3e0?ooo`000P3oool2000000@0oooo0P0000040?ooo`80
00000`3oool3000000@0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`3f0?ooo`00
00D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080oooo00@000000?oo
o`3oool000000`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0?L0oooo00001@3o
ool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?oo
o`0000030?ooo`<00000203oool00`000000oooo0?ooo`3h0?ooo`0000D0oooo0000003oool0oooo
000000080?ooo`040000003oool0oooo00000080oooo0`0000040?ooo`030000003oool0oooo00P0
oooo00<000000?ooo`3oool0n03oool000050?ooo`000000oooo0?ooo`000000203oool010000000
oooo0?ooo`0000030?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01`3oool00`00
0000oooo0?ooo`3i0?ooo`000P3oool2000000X0oooo0P0000040?ooo`<000000`3oool00`000000
oooo0?ooo`070?ooo`030000003oool0oooo0?T0oooo000J0?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool0nP3oool001X0oooo0P0000070?ooo`030000003oool0oooo0?X0oooo000J
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0n`3oool001X0oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`3k0?ooo`006P3oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo0?`0oooo000J0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0
o03oool001X0oooo0P0000050?ooo`030000003oool0oooo0?`0oooo000J0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool0o@3oool001X0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`3m0?ooo`006P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?d0
oooo000J0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0o@3oool001X0oooo0P00
00040?ooo`030000003oool0oooo0?d0oooo000J0?ooo`030000003oool0oooo00<0oooo00<00000
0?ooo`3oool0o@3oool001X0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3m0?oo
o`000P3oool2000000@0oooo0P0000040?ooo`800000103oool2000000@0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`3n0?ooo`0000D0oooo0000003oool0oooo000000080?ooo`04
0000003oool0oooo00000080oooo00@000000?ooo`3oool000000`3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo0?h0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@00000
0?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`<000000P3oool00`000000oooo
0?ooo`3n0?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo000000<0
oooo0P0000040?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0oP3oool000050?oo
o`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo
000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3n0?ooo`000P3oool20000
00X0oooo0P0000040?ooo`800000103oool01@000000oooo0?ooo`3oool000000?l0oooo0P3oool0
01X0oooo00D000000?ooo`3oool0oooo0000003o0?ooo`80oooo000J0?ooo`8000000P3oool00`00
0000oooo0?ooo`3o0?ooo`006P3oool01@000000oooo0?ooo`3oool000000?l0oooo0P3oool001X0
oooo00D000000?ooo`3oool0oooo0000003o0?ooo`80oooo000J0?ooo`050000003oool0oooo0?oo
o`000000o`3oool20?ooo`006P3oool01@000000oooo0?ooo`3oool000000?l0oooo0P3oool001X0
oooo0P0000000`3oool000000?ooo`3o0?ooo`80oooo000J0?ooo`040000003oool0oooo00000?l0
oooo0`3oool001X0oooo00@000000?ooo`3oool00000o`3oool30?ooo`006P3oool010000000oooo
0?ooo`00003o0?ooo`<0oooo000J0?ooo`040000003oool0oooo00000?l0oooo0`3oool001X0oooo
0P0000000`3oool000000?ooo`3o0?ooo`80oooo000J0?ooo`040000003oool0oooo00000?l0oooo
0`3oool001X0oooo00@000000?ooo`3oool00000o`3oool30?ooo`006P3oool010000000oooo0?oo
o`00003o0?ooo`<0oooo00080?ooo`800000103oool2000000<0oooo1@0000020?ooo`040000003o
ool0oooo00000?l0oooo0`3oool000L0oooo00@000000?ooo`3oool000002P3oool00`000000oooo
0?ooo`020?ooo`040000003oool0oooo00000?l0oooo0`3oool000L0oooo00@000000?ooo`3oool0
00002P3oool00`000000oooo0?ooo`020?ooo`@00000o`3oool30?ooo`001`3oool010000000oooo
0?ooo`00000:0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000o`3oool30?oo
o`001`3oool010000000oooo0?ooo`00000:0?ooo`030000003oool0oooo0080oooo00@000000?oo
o`3oool00000o`3oool30?ooo`00203oool2000000X0oooo0P0000040?ooo`040000003oool0oooo
00000?l0oooo0`3oool001X0oooo00<000000?ooo`000000o`3oool40?ooo`006P3oool300000?l0
oooo103oool001X0oooo00<000000?ooo`000000o`3oool40?ooo`006P3oool00`000000oooo0000
003o0?ooo`@0oooo000J0?ooo`030000003oool000000?l0oooo103oool001X0oooo00<000000?oo
o`000000o`3oool40?ooo`006P3oool300000?l0oooo103oool001X0oooo00<000000?ooo`000000
o`3oool40?ooo`006P3oool00`000000oooo0000003o0?ooo`@0oooo000J0?ooo`030000003oool0
00000?l0oooo103oool001X0oooo00<000000?ooo`000000o`3oool40?ooo`006P3oool300000?l0
oooo103oool001X0oooo00<000000?ooo`000000o`3oool40?ooo`006P3oool00`000000oooo0000
003o0?ooo`@0oooo00020?ooo`800000103oool2000000<0oooo1@0000000`3oool0000000000002
000000<0oooo00<000000?ooo`000000o`3oool40?ooo`0000D0oooo0000003oool0oooo0000000:
0?ooo`050000003oool0oooo0?ooo`0000001P3oool00`000000oooo0000003o0?ooo`@0oooo0000
1@3oool000000?ooo`3oool0000000X0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`030?ooo`<00000o`3oool40?ooo`0000D0oooo0000003oool0oooo0000000:0?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0000003o0?ooo`@0oooo0000
1@3oool000000?ooo`3oool0000000X0oooo00D000000?ooo`3oool0oooo000000020?ooo`070000
003oool0oooo0?ooo`000000oooo0000003o0?ooo`@0oooo00020?ooo`8000002P3oool2000000@0
oooo0P0000040?ooo`030000003oool000000?l0oooo103oool001X0oooo00<000000?ooo`000000
o`3oool40?ooo`006P3oool200000?l0oooo1@3oool001X0oooo0P00003o0?ooo`D0oooo000J0?oo
o`800000o`3oool50?ooo`006P3oool200000?l0oooo1@3oool001X0oooo0P00003o0?ooo`D0oooo
000J0?ooo`800000o`3oool50?ooo`006P3oool200000?l0oooo1@3oool001X0oooo0P00003o0?oo
o`D0oooo000J0?ooo`800000o`3oool50?ooo`006P3oool200000?l0oooo1@3oool001X0oooo0P00
003o0?ooo`D0oooo000J0?ooo`800000o`3oool50?ooo`006P3oool200000?l0oooo1@3oool001X0
oooo0P00003o0?ooo`D0oooo00020?ooo`800000103oool2000000<0oooo1@0000030?ooo`<00000
0P3oool200000?l0oooo1@3oool000050?ooo`000000oooo0?ooo`0000002P3oool00`000000oooo
0?ooo`040?ooo`040000003oool0oooo0?ooo`800000o`3oool50?ooo`0000D0oooo0000003oool0
oooo0000000:0?ooo`040000003oool0oooo0?ooo`D000000P3oool300000?l0oooo103oool00005
0?ooo`000000oooo0?ooo`0000002P3oool01@000000oooo0?ooo`3oool000000080oooo00@00000
0?ooo`3oool0oooo0P00003o0?ooo`D0oooo00001@3oool000000?ooo`3oool0000000X0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo000000030?ooo`800000o`3oool50?ooo`000P3oool2
000000X0oooo0P0000050?ooo`8000000`3oool200000?l0oooo1@3oool001X0oooo0P00003o0?oo
o`D0oooo000J0?ooo`800000o`3oool50?ooo`006P3oool200000?l0oooo1@3oool001X0oooo0P00
003o0?ooo`D0oooo000J0?ooo`800000o`3oool50?ooo`006P3oool200000?l0oooo1@3oool001X0
oooo0P00003o0?ooo`D0oooo000J0?ooo`800000o`3oool50?ooo`006P3oool200000?l0oooo1@3o
ool001X0oooo0P00003o0?ooo`D0oooo000J0?ooo`800000o`3oool50?ooo`006P3oool200000?l0
oooo1@3oool001X0oooo0P00003o0?ooo`D0oooo000J0?ooo`800000o`3oool50?ooo`000P3oool2
000000@0oooo0P0000030?ooo`D0000000@0oooo0000000000000000103oool200000?l0oooo1@3o
ool000050?ooo`000000oooo0?ooo`0000002P3oool01@000000oooo0?ooo`3oool000000080oooo
00D000000?ooo`3oool0oooo0000003o0?ooo`H0oooo00001@3oool000000?ooo`3oool0000000X0
oooo00D000000?ooo`3oool0oooo000000020?ooo`040000003oool0oooo0?ooo`<00000o`3oool4
0?ooo`0000D0oooo0000003oool0oooo0000000:0?ooo`040000003oool0oooo0?ooo`<00000103o
ool00`000000oooo0?ooo`3o0?ooo`@0oooo00001@3oool000000?ooo`3oool0000000X0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0oooo103o
ool00080oooo0P00000:0?ooo`800000103oool3000000<0oooo00<000000?ooo`3oool0o`3oool4
0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo000J0?ooo`800000o`3oool50?ooo`00
6P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo000J0?ooo`030000003oool0oooo0?l0oooo103o
ool001X0oooo00<000000?ooo`3oool0o`3oool40?ooo`006P3oool00`000000oooo0?ooo`3o0?oo
o`@0oooo000J0?ooo`800000o`3oool50?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo
000J0?ooo`030000003oool0oooo0?l0oooo103oool001X0oooo00<000000?ooo`3oool0o`3oool4
0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo000J0?ooo`800000o`3oool50?ooo`00
6P3oool00`000000oooo0?ooo`3o0?ooo`@0oooo000J0?ooo`030000003oool0oooo0?l0oooo103o
ool001X0oooo00<000000?ooo`3oool0o`3oool40?ooo`000P3oool2000000@0oooo0P0000030?oo
o`D000000P3oool2000000@0oooo00<000000?ooo`3oool0o`3oool40?ooo`0000D0oooo0000003o
ool0oooo0000000:0?ooo`050000003oool0oooo0?ooo`0000000P3oool01@000000oooo0?ooo`3o
ool000000?l0oooo1P3oool000050?ooo`000000oooo0?ooo`0000002P3oool01@000000oooo0?oo
o`3oool000000080oooo00@000000?ooo`3oool0oooo0`00003o0?ooo`@0oooo00001@3oool00000
0?ooo`3oool0000000X0oooo00<000000?ooo`3oool00P3oool200000?l0oooo2`3oool000050?oo
o`000000oooo0?ooo`0000002P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?oo
o`3oool0o`3oool80?ooo`000P3oool2000000X0oooo0P0000040?ooo`800000o`3oool;0?ooo`00
o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`007P3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo0?00oooo000E0?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`3_0?ooo`000`3oool400000080oooo1000
00020?ooo`D000000P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo0`00
00020?ooo`80000000<0oooo000000000000103oool00`000000oooo0?ooo`3^0?ooo`00103oool0
0`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`020?ooo`040000003oool0oooo00000080oooo00<000000?ooo`0000001@3o
ool00`000000oooo0?ooo`3^0?ooo`00103oool00`000000oooo0?ooo`020?ooo`@00000103oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool0
10000000oooo0?ooo`0000020?ooo`<000001@3oool00`000000oooo0?ooo`3^0?ooo`000`3oool4
000000X0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo0080oooo0`0000030?ooo`040000003oool00000000000@0oooo00<000000?ooo`3oool0kP3o
ool000@0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool0k`3oool000D0oooo0P0000090?ooo`8000001P3oool00`00
0000oooo0?ooo`030?ooo`040000003oool0oooo0?ooo`<0000000<0oooo0000000000001@3oool0
0`000000oooo0?ooo`3`0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3o
oolQ0?ooo`00\
\>"],
  ImageRangeCache->{{{74.5, 303.875}, {549.188, 407.875}} -> {-5.1732, \
0.524697, 0.0431005, 0.000976333}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"],

Cell[BoxData[
    \({0, F1\/2, \(F1\ lc\)\/2}\)], "Output"],

Cell[BoxData[
    \({\(F1\ lc\^3\)\/\(6\ EJc\), \(-\(\(F1\ lc\^2\)\/\(4\ EJc\)\)\), \
\(-\(\(F1\ lc\^2\)\/\(4\ EJc\)\)\)}\)], "Output"],

Cell[BoxData[
    \({\(F1\ lc\)\/\(2\ lt\), F1\/2, \(F1\ lc\)\/4}\)], "Output"],

Cell[BoxData[
    \({\(F1\ lc\^3\)\/\(24\ EJc\), 0, 0}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\("\<\>";\)\), "\n", 
    \(\("\<Una eventuale ulteriore soluzione alternativa col Metodo delle \
Forze 
 potrebbe essere sviluppata di seguito mediante il Metodo della Linea \
Elastica\>";\)\), "\[IndentingNewLine]", 
    \(\("\<\>";\)\)}], "Input"]
},
FrontEndVersion->"5.0 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 937}},
WindowSize->{1272, 903},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
CellLabelAutoDelete->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 2685, 49, 970, "Input"],
Cell[4464, 104, 457, 11, 97, "Output"],
Cell[4924, 117, 556, 8, 47, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5517, 130, 1267, 24, 410, "Input"],
Cell[6787, 156, 117, 2, 44, "Output"],
Cell[6907, 160, 125, 2, 43, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7069, 167, 1309, 31, 350, "Input"],
Cell[8381, 200, 150, 2, 47, "Output"],
Cell[8534, 204, 382, 5, 46, "Output"],
Cell[8919, 211, 43, 1, 29, "Output"],
Cell[8965, 214, 402, 5, 47, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9404, 224, 481, 9, 110, "Input"],
Cell[9888, 235, 92, 1, 44, "Output"],
Cell[9983, 238, 16362, 482, 186, 5285, 341, "GraphicsData", "PostScript", \
"Graphics"],
Cell[26348, 722, 130, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[26515, 730, 811, 14, 270, "Input"],
Cell[27329, 746, 108, 2, 42, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[27474, 753, 808, 18, 190, "Input"],
Cell[28285, 773, 290, 4, 46, "Output"],
Cell[28578, 779, 115, 2, 42, "Output"],
Cell[28696, 783, 111, 2, 43, "Output"],
Cell[28810, 787, 541, 8, 47, "Output"],
Cell[29354, 797, 208, 3, 46, "Output"],
Cell[29565, 802, 68, 1, 46, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[29670, 808, 3364, 79, 1030, "Input"],
Cell[33037, 889, 290, 4, 46, "Output"],
Cell[33330, 895, 43, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[33410, 901, 1281, 30, 310, "Input"],
Cell[34694, 933, 399, 5, 47, "Output"],
Cell[35096, 940, 43, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[35176, 946, 1414, 30, 370, "Input"],
Cell[36593, 978, 138, 2, 43, "Output"],
Cell[36734, 982, 199, 3, 47, "Output"],
Cell[36936, 987, 20526, 577, 186, 7217, 408, "GraphicsData", "PostScript", \
"Graphics"],
Cell[57465, 1566, 130, 3, 29, "Output"],
Cell[57598, 1571, 59, 1, 42, "Output"],
Cell[57660, 1574, 135, 2, 46, "Output"],
Cell[57798, 1578, 79, 1, 43, "Output"],
Cell[57880, 1581, 68, 1, 46, "Output"]
}, Open  ]],
Cell[57963, 1585, 271, 6, 90, "Input"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

